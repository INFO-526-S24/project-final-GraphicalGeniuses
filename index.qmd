---
title: "Project Title"
subtitle: "INFO 526 - Project Final"
author: 
  - name: "Team name - Team member 1, Team member 2,..."
    affiliations:
      - name: "School of Information, University of Arizona"
description: "Project description"
format:
   html:
    code-tools: true
    code-overflow: wrap
    embed-resources: true
editor: visual
execute:
  warning: false
  echo: false
---

## Abstract

Add project abstract here.

```{r}

pacman::p_load(tidyverse, readr, stringr, sf, "rnaturalearth", "rnaturalearthdata", "ggspatial")

ronaldo <- read_csv("data/cr7.csv")


messi <- read_csv("data/messi.csv")



ronaldo <- ronaldo %>%
  mutate(
    Year = paste0("20", str_sub(Date, -2, -1))
)

messi <- messi %>%
  mutate(
    Year = paste0("20", str_sub(Date, -2, -1))
)



```

```{r}
#| fig-width: 15
#| fig-height: 15

pacman::p_load(tidyverse, readr, stringr, sf, "rnaturalearth", "rnaturalearthdata", "ggspatial", ggh4x)


ronaldo <- read_csv("data/cr7.csv")
messi <- read_csv("data/messi.csv")



ronaldo <- ronaldo %>%
  mutate(
    Year = paste0("20", str_sub(Date, -2, -1))
)

messi <- messi %>%
  mutate(
    Year = paste0("20", str_sub(Date, -2, -1))
)


ronaldo <- ronaldo %>%
  filter(Season != "02/03" & Season != "03/04")


world <- ne_countries(scale = "medium", returnclass = "sf")
testedJoin <- 






combined <- bind_rows(ronaldo,messi, .id = "Player")

combined <- combined %>%
  mutate(Player = case_when(
    Player == 1 ~ "Ronaldo",
    Player == 2 ~ "Messi"
  ))

combined2 <- combined


countries <- data.frame(coun = c('Moreirense FC - Portugal',
               'Boavista FC - Portugal',
               'CD Estarreja - Portugal',
               'FC Oliveira do Hospital - Portugal',
               'Portsmouth FC - England',
               'Manchester City - England',
               'Tottenham Hotspur - England',
               'Birmingham City - England',
               'Aston Villa - England',
               'Millwall FC - England',
               'Southampton FC - England',
               'Exeter City - England',
               'Arsenal FC - England',
               'Everton FC - England',
               'Fulham FC - England',
               'Newcastle United - England',
               'Debreceni VSC - Hungary',
               'Middlesbrough FC - England',
               'West Bromwich Albion - England',
               'Bolton Wanderers - England',
               'Wigan Athletic - England',
               'Charlton Athletic - England',
               'Reading FC - England',
               'Watford FC - England',
               'AS Roma - Italy',
               'AC Milan - Italy',
               'Sporting CP - Portugal',
               'Dynamo Kyiv - Ukraine',
               'Blackburn Rovers - England',
               'Derby County - England',
               'Sunderland AFC - England',
               'West Ham United - England',
               'Olympique Lyon - France',
               'Liverpool FC - England',
               'Chelsea FC - England',
               'Hull City - England',
               'Stoke City - England',
               'Gamba Osaka - Japan',
               'FC Internazionale - Italy',
               'FC Porto - Portugal',
               'Deportivo de La Coruña - Spain',
               'RCD Espanyol Barcelona - Spain',
               'FC Zürich - Switzerland',
               'Xerez CD - Spain',
               'Villarreal CF - Spain',
               'Olympique Marseille - France',
               'UD Almería - Spain',
               'Real Zaragoza - Spain',
               'Malaga CF - Spain',
               'CD Tenerife - Spain',
               'Sevilla FC - Spain',
               'Real Valladolid CF - Spain',
               'Getafe CF - Spain',
               'Racing Santander - Spain',
               'Valencia CF - Spain',
               'CA Osasuna - Spain',
               'RCD Mallorca - Spain',
               'Athletic Bilbao - Spain',
               'Hercules CF - Spain',
               'Real Murcia CF - Spain',
               'Ajax Amsterdam - Netherlands',
               'AJ Auxerre - France',
               'Levante UD - Spain',
               'Atletico de Madrid - Spain',
               'Real Sociedad - Spain',
               'FC Barcelona - Spain',
               'Rayo Vallecano - Spain',
               'Sporting Gijón - Spain',
               'SD Ponferradina - Spain',
               'Granada CF - Spain',
               'CSKA Moscow - Russia',
               'Real Betis Balompie - Spain',
               'APOEL Nicosia - Cyprus',
               'Bayern Munich - Germany',
               'Celta de Vigo - Spain',
               'Borussia Dortmund - Germany',
               'Manchester United - England',
               'Galatasaray - Turkey',
               'Elche CF - Spain',
               'FC Copenhagen - Denmark',
               'Juventus FC - Italy',
               'FC Schalke 04 - Germany',
               'Córdoba CF - Spain',
               'FC Basel 1893 - Switzerland',
               'Ludogorets Razgrad - Bulgaria',
               'SD Eibar - Spain',
               'Shakhtar Donetsk - Ukraine',
               'Malmö FF - Sweden',
               'UD Las Palmas - Spain',
               'VfL Wolfsburg - Germany',
               'Deportivo Alaves - Spain',
               'CF America - Mexico',
               'Kashima Antlers - Japan',
               'Al-Jazira (Abu Dhabi) - United Arab Emirates',
               'Grêmio Foot-Ball Porto Alegrense - Brazil',
               'Paris Saint-Germain - France',
               'Girona FC - Spain',
               'US Sassuolo - Italy',
               'Frosinone Calcio - Italy',
               'Udinese Calcio - Italy',
               'Genoa CFC - Italy',
               'Empoli FC - Italy',
               'SPAL - Italy',
               'ACF Fiorentina - Italy',
               'Torino FC - Italy',
               'Atalanta BC - Italy',
               'UC Sampdoria - Italy',
               'SS Lazio - Italy',
               'Parma Calcio 1913 - Italy',
               'Inter Milan - Italy',
               'SSC Napoli - Italy',
               'Hellas Verona - Italy',
               'Bayer 04 Leverkusen - Germany',
               'Bologna FC 1909 - Italy',
               'Cagliari Calcio - Italy',
               'US Lecce - Italy',
               'Spezia Calcio - Italy',
               'Ferencvarosi TC - Hungary',
               'FC Crotone - Italy',
               'BSC Young Boys - Switzerland',
               'Norwich City - England',
               'Burnley FC - England',
               'Brighton & Hove Albion - England',
               'Brentford FC - England',
               'FC Sheriff - Moldova',
               'Albacete Balompie - Spain',
               'Panathinaikos Athens - Greece',
               'SV Werder Bremen - Germany',
               'Real Madrid - Spain',
               'Recreativo Huelva - Spain',
               'Deportivo de La Coruña - Spain',
               'Gimnastic de Tarragona - Spain',
               'VfB Stuttgart - Germany',
               'UD Almería - Spain',
               'Rangers FC - Scotland',
               'Celtic FC - Scotland',
               'Benidorm CD - Spain',
               'CD Numancia - Spain',
               'Cultural Leonesa - Spain',
               'CF Atlante - Mexico',
               'Club Estudiantes de La Plata - Argentina',
               'Club Atletico de Ceuta - Spain',
               'BATE Borisov - Belarus',
               'FC Viktoria Plzen - Czech Republic',
               'Santos FC - Brazil',
               'Spartak Moscow - Russia',
               'CA River Plate - Argentina',
               'CD Leganes - Spain',
               'Borussia Mönchengladbach - Germany',
               'Olympiacos Piraeus - Greece',
               'SD Huesca - Spain',
               'PSV Eindhoven - Netherlands',
               'SK Slavia Prague - Czech Republic',
               'Cadiz CF - Spain',
               'RB Leipzig - Germany',
               'FC Nantes - France',
               'Club Brugge KV - Belgium',
               'LOSC Lille - France',
               'FC Lorient - France',
               'RC Lens - France',
               'Montpellier - France',
               'Clermont Foot - France',
               'Maccabi Haifa - Israel',
               'OGC Nice - France',
               'SL Benfica - Portugal',
               'AC Ajaccio - France',
               'ESTAC Troyes - France'
)) 


countries <- separate(countries, coun, into = c("Opponent", "Country"), sep = " - ")

combined <- left_join(combined, countries, by = "Opponent")
combined2 <- left_join(combined2, countries, by = "Opponent")

#View(newdf[is.na(Country), .(Opponent)])

worldTesting <- ne_countries(scale = "medium", returnclass = "sf")


combined3 <- combined %>%
  mutate(Country = case_when(
    Country == "England" ~ "United Kingdom",
    Country == "Wales" ~ "United Kingdom",
    Country == "Scotland" ~ "United Kingdom",
    Country == "Czech Republic" ~ "Czechia",
    T ~ Country
  ))


worldMerge4 <- full_join(combined3, worldTesting, by = c("Country" = "geounit"))
worldMerge4 <- left_join(combined3, worldTesting, by = c("Country" = "geounit"))

worldMerge5 <- worldMerge4 %>%
  filter(!is.na(Country)) %>%
  select(c(1:16, 20, 184))

map <- ggplot() +
  geom_sf(data = worldTesting, aes(geometry = geometry)) +
  geom_sf(data = worldMerge5, aes(geometry = geometry, fill = is.na(Player))) +
  theme_minimal() +
  theme() +
  scale_fill_manual(values = c("gold", "azure"))
#map

#placeholder2 <- ggplotly(map)


pacman::p_load(remotes)
#remotes::install_github("plotly/dashR", upgrade = "always")
#library(dash)

#app <- dash_app()
 


```

#| fig-width: 30
#| fig-height: 30
library(ggplot2)
library(maps)
# Example data frame
data <- data.frame(
  "Country" = c("India", "China", "Mexico", "United States"),
  "Country_code" = c("IN", "CN", "MX", "USA"),
  "Id" = c(40, 3781, 40, 1000),
  "Unique_person" = c(2, 1, 1, 14)
)


# Merge data with world map
data <- merge(data, map_data("world"), by.x = "Country", by.y = "region")
# Create the plot
placeholder <- ggplot(data, aes(long, lat, map_id = Country)) +
  geom_map(aes(fill = Unique_person), map = map_data("world"), color = "white") +
  scale_fill_continuous(low = "lightgray", high = "blue") +
  theme_void() +
  theme(legend.position = "bottom")










```{r}

########
pacman::p_load(rworldmap)

testAgain <- merge(combined, map_data("world"), by.x = "Country", by.y = "region")


matchedTest <- joinCountryData2Map(combined2, joinCode = "NAME", nameJoinColumn = "Country")
country_coordTest <- data.frame(coordinates(matchedTest), stringsAsFactors = FALSE)

country_coordTest2 <- country_coordTest %>%
  mutate(country = row.names(country_coordTest))

testAgain <- testAgain %>%
  left_join(country_coordTest2, by = c("Country" = "country"))

#country_coordTest3 <- country_coordTest %>%
#  mutate(country = country_coordTest[0])


```

map2 \<- ggplot() + geom_polygon(data = map_data("world"), aes(x = long, y = lat, group = group), color = "lightgrey", fill = "azure") + geom_map(data = testAgain, aes(fill = Year, long, lat, map_id = Country), map = map_data("world"), color = "white") + theme_void() + geom_text(data = testAgain, aes(x = X1, y = X2, label = Country)) + ggtitle("Year: {closest_state}") + theme(legend.position = "none") + transition_states(Year, 1, 5, T) + facet_wrap2(vars(Player))

#animate(map2)

map2 \<- ggplot() + geom_polygon(data = map_data("world"), aes(x = long, y = lat, group = group), color = "lightgrey", fill = "azure") + geom_map(data = testAgain, aes(fill = Year, long, lat, map_id = Country), map = map_data("world"), color = "white") + theme_void() + geom_text_repel(data= map_data("world"), aes(label = name, geometry = geometry), stat = "sf_coordinates", size = 3) + ggtitle("Year: {closest_state}") + theme(legend.position = "none") + transition_states(Year, 1, 5, T) + facet_wrap2(vars(Player))

```{r}
#| fig-asp: 0.618
#| fig-width: 12
#| fig-dpi: 800
```

```{r}
#| fig-asp: 0.618
#| fig-width: 20

pacman:: p_load(gganimate, plotly, maps, ggthemes, ggrepel, av)



anim <- ggplot() +
  geom_sf(data = worldTesting, aes(geometry = geometry)) + 
  theme_minimal()+ 
  geom_sf(data = worldMerge5, aes(geometry = geometry, fill = Player)) +
  facet_wrap2(vars(Player), nrow = 2) +
  ggtitle("Year: {closest_state}") +
  theme(legend.position = "none") +
  transition_states(Year, transition_length = 1, state_length = 5, T) 







#anim <- anim + enter_fade() + exit_fade()

#animate(anim, renderer = av_renderer("out.mp4"), height = 800, width = 1000, res = 500)





worldSquashed <- worldMerge5 %>%
  group_by(Year, Country, Player, geometry) %>%
  summarise(goals = n())


worldSquashed2 <- worldSquashed %>%
  group_by(Year, Country )%>%
  mutate(plays = n()) %>%
  mutate(colr = case_when(
    Player == "Messi" & plays == 1 ~ "Messi",
    Player == "Ronaldo" & plays == 1 ~ "Ronaldo",
    plays == 2 ~ "Both",
    T ~ "Neither"
  ))

pacman::p_load(rworldmap)



worldSquashed3 <- worldSquashed2 %>%
  filter(colr == "Both")


matchedTest <- joinCountryData2Map(combined2, joinCode = "NAME", nameJoinColumn = "Country")
country_coordTest <- data.frame(coordinates(matchedTest), stringsAsFactors = FALSE)
country_coordTest2 <- country_coordTest %>%
  mutate(country = row.names(country_coordTest))

worldSquashed4 <- worldSquashed2 %>%
  left_join(country_coordTest2, by = c("Country" = "country"))



anim <- ggplot() +
  geom_sf(data = worldTesting, aes(geometry = geometry)) + 
  theme_minimal()+ 
  geom_sf(data = worldSquashed2, aes(geometry = geometry, fill = colr)) +
  ggtitle("Year: {closest_state}") +
  theme(legend.position = "left",
        axis.title = element_blank()) +
  geom_text(data=worldSquashed4, aes(label = Country, x = `X1`, y = `X2`), size = 3) +
  geom_text(data= subset(worldSquashed4, colr %in% "Messi"), aes(label = paste0("Messi's\n", goals), x = 180, y = 120), size = 10) +
  geom_text(data= subset(worldSquashed4, colr %in% "Ronaldo"), aes(label = paste0("Ronaldo's\n", goals), x = 130, y = 120), size = 10)
 # geom_text(data=worldSquashed4, aes(label = paste0("Ronaldo\n", goals), x = 130, y = 120), size = 10) +
    #geom_text(data=worldSquashed4, aes(label = paste0("Messi\n", goals), x = 180, y = 120), size = 10) +
 
#+transition_states(Year, transition_length = 1, state_length = 15, T)


  #geom_col(data = worldSquashed) +

anim

#animate(anim, renderer = av_renderer("out3.mp4"), height = 1000, width = 1300, duration = 35)





#60
#anim




anim <- ggplot() +
  geom_sf(data = worldTesting, aes(geometry = geometry)) + 
  theme_minimal()+ 
  geom_sf(data = worldMerge5, aes(geometry = geometry, fill = )) +
  ggtitle("Year: {closest_state}") +
  theme(legend.position = "none") +
  transition_states(Year, transition_length = 1, state_length = 8, T) 

#animate(anim, renderer = av_renderer("out2.mp4"), height = 1000, width = 1300)


#animate(map2)


```

```         
```
